{
	"name": "ISO 25010 CSharp Quality Model",
	"additionalData": {},
	"tqi": {
		"name": "Total Software Quality"
	},
	"characteristics": {
		"Compatability": {
			"name": "Compatability",
			"description": "Sample description"
		},
		"Maintainability": {
			"name": "Maintainability",
			"description": "Sample description"
		},
		"Performance Efficiency": {
			"name": "Performance Efficiency",
			"description": "Sample description"
		},
		"Portability": {
			"name": "Portability",
			"description": "Sample description"
		},
		"Reliability": {
			"name": "Reliability",
			"description": "Sample description"
		},
		"Security": {
			"name": "Security",
			"description": "Sample description"
		},
		"Usability": {
			"name": "Usability",
			"description": "Sample description"
		}
	},
	"properties": {
		"Data Type Integrity": {
			"measure": {
				"name": "Data Type Integrity Findings",
				"description": "The data type integrity property is measured by static analysis tools that can collect findings categorized under source code data type faults.",
				"diagnostics": [
					{
						"name": "CS0028",
						"description": "'function declaration' has the wrong signature to be an entry point",
						"toolName": "Roslynator"
					},
					{
						"name": "CS0108",
						"description": "'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1008",
						"description": "Use explicit type instead of 'var' (when the type is not obvious)",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1009",
						"description": "Use explicit type instead of 'var' (foreach variable)",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1010",
						"description": "Use 'var' instead of explicit type (when the type is obvious)",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1013",
						"description": "Use predefined type",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1014",
						"description": "Avoid implicitly-typed array",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1135",
						"description": "Declare enum member with zero value (when enum has FlagsAttribute)",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1177",
						"description": "Use 'var' instead of explicit type (in foreach)",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1204",
						"description": "Use EventArgs.Empty",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1210",
						"description": "Return Task.FromResult instead of returning null",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1231",
						"description": "Make parameter ref read-only",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1234",
						"description": "Duplicate enum value",
						"toolName": "Roslynator"
					}
				]
			},
			"positive": false,
			"name": "Data Type Integrity refers to the wellness and understandability of data objects. This often involves not using null, returning the correct object in function declarations, is overridding or hiding of other intended data objects.",
			"description": "Sample description"
		},
		"Documentation": {
			"measure": {
				"name": "Documentation Findings",
				"description": "The documentation property is measured by static analysis tools that can collect findings categorized under source code documentation faults.",
				"diagnostics": [
					{
						"name": "RCS1138",
						"description": "Add summary to documentation comment",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1139",
						"description": "Add summary element to documentation comment",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1140",
						"description": "Add exception to documentation comment",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1141",
						"description": "Add 'param' element to documentation comment",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1142",
						"description": "Add 'typeparam' element to documentation comment",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1181",
						"description": "Convert comment to documentation comment",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1232",
						"description": "Order elements in documentation comment",
						"toolName": "Roslynator"
					}
				]
			},
			"positive": false,
			"name": "Documentation",
			"description": "Sample description"
		},
		"Encryption": {
			"measure": {
				"name": "Encryption Findings",
				"description": "The encryption property is measured by static analysis tools that can collect findings categorized under source code encryption faults.",
				"diagnostics": [
					{
						"name": "SCS0005",
						"description": "Weak Random Number Generator",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0006",
						"description": "Weak hashing function",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0010",
						"description": "Weak cipher algorithm",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0011",
						"description": "Weak CBC Mode",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0012",
						"description": "Weak ECB Mode",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0013",
						"description": "Weak Cipher Mode",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0015",
						"description": "Hardcoded Password",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0023",
						"description": "View State Not Encrypted",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0024",
						"description": "View State MAC Disabled",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0032",
						"description": "Password RequiredLength Too Small",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0033",
						"description": "Password Complexity",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0034",
						"description": "Password RequiredLength Not Set",
						"toolName": "Roslynator"
					}
				]
			},
			"positive": false,
			"name": "Encryption",
			"description": "Sample description"
		},
		"Exception Handling": {
			"measure": {
				"name": "Exception Handling Findings",
				"description": "The exception handling property is measured by static analysis tools that can collect findings categorized under source code exception handling faults.",
				"diagnostics": [
					{
						"name": "RCS1044",
						"description": "Remove original exception from throw statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1075",
						"description": "Avoid empty catch clause that catches System.Exception",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1194",
						"description": "Implement exception constructors",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1202",
						"description": "Avoid NullReferenceException",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1210",
						"description": "Return Task.FromResult instead of returning null",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1236",
						"description": "Use exception filter",
						"toolName": "Roslynator"
					}
				]
			},
			"positive": false,
			"name": "Exception Handling",
			"description": "Sample description"
		},
		"Format": {
			"measure": {
				"name": "Format Findings",
				"description": "The format property is measured by static analysis tools that can collect findings categorized under source code format faults.",
				"diagnostics": [
					{
						"name": "CS0067",
						"description": "The event 'event' is never used",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1001",
						"description": "Add braces (when expression spans over multiple lines)",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1002",
						"description": "Remove braces",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1003",
						"description": "Add braces to if-else (when expression spans over multiple lines)",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1004",
						"description": "Remove braces from if-else",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1005",
						"description": "Simplify nested using statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1006",
						"description": "Merge else clause with nested if statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1007",
						"description": "Add braces",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1016",
						"description": "Use expression-bodied member",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1017",
						"description": "Avoid multiline expression body",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1018",
						"description": "Add accessibility modifiers",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1019",
						"description": "Order modifiers",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1020",
						"description": "Simplify Nullable<T> to T?",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1021",
						"description": "Simplify lambda expression",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1024",
						"description": "Format accessor list",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1025",
						"description": "Add new line before enum member",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1026",
						"description": "Add new line before statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1027",
						"description": "Add new line before embedded statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1028",
						"description": "Add new line after switch label",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1029",
						"description": "Format binary operator on next line",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1030",
						"description": "Add empty line after embedded statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1031",
						"description": "Remove unnecessary braces",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1032",
						"description": "Remove redundant parentheses",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1033",
						"description": "Remove redundant boolean literal",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1034",
						"description": "Remove redundant 'sealed' modifier",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1035",
						"description": "Remove redundant comma in initializer",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1036",
						"description": "Remove redundant empty line",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1037",
						"description": "Remove trailing white-space",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1038",
						"description": "Remove empty statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1039",
						"description": "Remove argument list from attribute",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1040",
						"description": "Remove empty else clause",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1041",
						"description": "Remove empty initializer",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1042",
						"description": "Remove enum default underlying type",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1043",
						"description": "Remove 'partial' modifier from type with a single part",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1045",
						"description": "Rename private field according to camel case with underscore",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1046",
						"description": "Asynchronous method name should end with 'Async'",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1047",
						"description": "Non-asynchronous method name should not end with 'Async'",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1049",
						"description": "Simplify boolean comparison",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1050",
						"description": "Add argument list to object creation expression",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1051",
						"description": "Parenthesize condition in conditional expression",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1057",
						"description": "Add empty line between declarations",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1058",
						"description": "Use compound assignment",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1068",
						"description": "Simplify logical negation",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1073",
						"description": "Convert 'if' to 'return' statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1094",
						"description": "Declare using directive on top level",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1103",
						"description": "Convert 'if' to assignment",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1104",
						"description": "Simplify conditional expression",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1104",
						"description": "Simplify conditional expression",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1128",
						"description": "Use coalesce expression",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1134",
						"description": "Remove redundant statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1154",
						"description": "Sort enum members",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1172",
						"description": "Use 'is' operator instead of 'as' operator",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1215",
						"description": "Expression is always equal to true/false",
						"toolName": "Roslynator"
					}
				]
			},
			"positive": false,
			"name": "Format",
			"description": "Sample description"
		},
		"Functional Syntax": {
			"measure": {
				"name": "Functional Syntax Findings",
				"description": "The function syntax property is measured by static analysis tools that can collect findings categorized under source code funciton syntax faults.",
				"diagnostics": [
					{
						"name": "RCS1048",
						"description": "Use lambda expression instead of anonymous method",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1061",
						"description": "Merge if statement with nested if statement",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1077",
						"description": "Optimize LINQ method call",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1080",
						"description": "Use 'Count/Length' property instead of 'Any' method",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1096",
						"description": "Use bitwise operation instead of calling 'HasFlag'",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1113",
						"description": "Use 'string.IsNullOrEmpty' method",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1146",
						"description": "Use conditional access",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1155",
						"description": "Use StringComparison when comparing strings",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1156",
						"description": "Use string.Length instead of comparison with empty string",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1165",
						"description": "Unconstrained type parameter checked for null",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1197",
						"description": "Optimize StringBuilder.Append/AppendLine call",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1198",
						"description": "Avoid unnecessary boxing of value type",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1200",
						"description": "Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy'",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1206",
						"description": "Use conditional access instead of conditional expression",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1215",
						"description": "Expression is always equal to true/false",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1219",
						"description": "Call 'Enumerable.Skip' and 'Enumerable.Any' instead of 'Enumerable.Count'",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1227",
						"description": "Validate arguments correctly",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1233",
						"description": "Use short-circuiting operator",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1235",
						"description": "Optimize method call",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1236",
						"description": "Use exception filter",
						"toolName": "Roslynator"
					}
				]
			},
			"positive": false,
			"name": "Functional Syntax",
			"description": "Function syntax is the property of source code referring to syntactical differences of functional processes. That is, the use of alternate coding approach to accomplish the same functional goal."
		},
		"Input Output Handling": {
			"measure": {
				"name": "Input Output Handling Findings",
				"description": "The I/O handling property is measured by static analysis tools that can collect findings categorized under source code I/O handling faults.",
				"diagnostics": [
					{
						"name": "SCS0001",
						"description": "Command Injection",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0002",
						"description": "SQL Injection (LINQ)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0003",
						"description": "XPath Injection",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0004",
						"description": "Certificate Validation Disabled",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0007",
						"description": "XML eXternal Entity Injection (XXE)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0008",
						"description": "Cookie Without SSL Flag",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0009",
						"description": "Cookie Without HttpOnly Flag",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0011",
						"description": "Weak CBC Mode",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0014",
						"description": "SQL Injection (WebControls)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0016",
						"description": "Cross-Site Request Forgery (CSRF)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0017",
						"description": "Request Validation Disabled (Attribute)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0018",
						"description": "Path Traversal",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0019",
						"description": "OutputCache Conflict",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0020",
						"description": "SQL Injection (OLE DB)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0021",
						"description": "Request Validation Disabled (Configuration File)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0022",
						"description": "Event Validation Disabled",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0025",
						"description": "SQL Injection (ODBC)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0026",
						"description": "SQL Injection (MsSQL Data Provider)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0027",
						"description": "Open Redirect",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0028",
						"description": "Insecure Deserialization",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0029",
						"description": "Cross-Site Scripting (XSS)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0030",
						"description": "Request validation is enabled only for pages (Configuration File)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0031",
						"description": "LDAP Injection",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0035",
						"description": "SQL Injection (Entity Framework)",
						"toolName": "Roslynator"
					},
					{
						"name": "SCS0036",
						"description": "SQL Injection (EnterpriseLibrary.Data)",
						"toolName": "Roslynator"
					}
				]
			},
			"positive": false,
			"name": "Input Output Handling",
			"description": "Sample description"
		},
		"Resource Handling": {
			"measure": {
				"name": "Resource Handling Findings",
				"description": "The resource handling property is measured by static analysis tools that can collect findings categorized under source code resource handling faults.",
				"diagnostics": [
					{
						"name": "RCS1059",
						"description": "Avoid locking on publicly accessible instance",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1090",
						"description": "Call 'ConfigureAwait(false)'",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1159",
						"description": "Use EventHandler<T>",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1210",
						"description": "Return Task.FromResult instead of returning null",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1229",
						"description": "Use async/await when necessary",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD001",
						"description": "Avoid legacy thread switching methods",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD002",
						"description": "Avoid problematic synchronous waits",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD003",
						"description": "Avoid awaiting foreign Tasks",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD004",
						"description": "Await SwitchToMainThreadAsync",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD010",
						"description": "Invoke single-threaded types on Main thread",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD011",
						"description": "Use AsyncLazy<T>",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD012",
						"description": "Provide JoinableTaskFactory where allowed",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD100",
						"description": "Avoid async void methods",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD101",
						"description": "Avoid unsupported async delegates",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD102",
						"description": "Implement internal logic asynchronously",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD103",
						"description": "Call async methods when in an async method",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD104",
						"description": "Offer async option",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD105",
						"description": "Avoid method overloads that assume TaskScheduler.Current",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD106",
						"description": "Use InvokeAsync to raise async events",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD107",
						"description": "Await Task within using expression",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD108",
						"description": "Assert thread affinity unconditionally",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD109",
						"description": "Switch instead of assert in async methods",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD110",
						"description": "Observe result of async calls",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD111",
						"description": "Use .ConfigureAwait(bool)",
						"toolName": "Roslynator"
					},
					{
						"name": "VSTHRD200",
						"description": "Use Async naming convention",
						"toolName": "Roslynator"
					}
				]
			},
			"positive": false,
			"name": "Resource Handling",
			"description": "Sample description"
		},
		"Structure": {
			"measure": {
				"name": "Structure Findings",
				"description": "The structure property is measured by static analysis tools that can collect findings categorized under source code structure faults.",
				"diagnostics": [
					{
						"name": "RCS1060",
						"description": "Declare each type in separate file",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1085",
						"description": "Use auto-implemented property",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1102",
						"description": "Make class static",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1110",
						"description": "Declare type inside namespace",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1157",
						"description": "Composite enum value contains undefined flag",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1158",
						"description": "Static member in generic type should use a type parameter",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1160",
						"description": "Abstract type should not have public constructors",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1161",
						"description": "Enum should declare explicit values",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1168",
						"description": "Parameter name differs from base name",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1169",
						"description": "Make field read-only",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1170",
						"description": "Use read-only auto-implemented property",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1187",
						"description": "Use constant instead of field",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1193",
						"description": "Overriding member cannot change 'params' modifier",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1194",
						"description": "Implement exception constructors",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1203",
						"description": "Use AttributeUsageAttribute",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1216",
						"description": "Unnecessary unsafe context",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1224",
						"description": "Make method an extension method",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1225",
						"description": "Make class sealed",
						"toolName": "Roslynator"
					},
					{
						"name": "RCS1241",
						"description": "Implement non-generic counterpart",
						"toolName": "Roslynator"
					}
				]
			},
			"positive": false,
			"name": "Structure",
			"description": "Sample description"
		}
	}
}