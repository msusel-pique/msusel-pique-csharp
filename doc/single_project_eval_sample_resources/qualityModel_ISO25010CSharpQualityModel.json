{
    "name": "ISO 25010 CSharp Quality Model",
    "additionalData": {},
    "tqi": {
        "weights": {
            "Compatability": 0.0543,
            "Performance Efficiency": 0.1587,
            "Portability": 0.0892,
            "Maintainability": 0.1949,
            "Reliability": 0.407,
            "Security": 0.0161,
            "Usability": 0.0799
        },
        "name": "Total Software Quality",
        "value": 0.0
    },
    "characteristics": {
        "Compatability": {
            "weights": {
                "Functional Syntax": 0.048,
                "Format": 0.017,
                "Resource Handling": 0.1635,
                "Data Type Integrity": 0.163,
                "Documentation": 0.0352,
                "Exception Handling": 0.2522,
                "Encryption": 0.0216,
                "Input Output Handling": 0.2134,
                "Structure": 0.0293,
                "Functional Semantics": 0.0567
            },
            "name": "Compatability",
            "description": "Degree to which a product, system or component can exchange information with other products, systems or components, and/or perform its required functions while sharing the same hardware or software environment. Sub-characteristics: Co-existence, Interoperability.",
            "value": 0.0
        },
        "Performance Efficiency": {
            "weights": {
                "Functional Syntax": 0.0217,
                "Format": 0.0159,
                "Resource Handling": 0.232,
                "Data Type Integrity": 0.1163,
                "Documentation": 0.0152,
                "Exception Handling": 0.232,
                "Encryption": 0.0318,
                "Input Output Handling": 0.232,
                "Structure": 0.0507,
                "Functional Semantics": 0.0524
            },
            "name": "Performance Efficiency",
            "description": "This characteristic represents the performance relative to the amount of resources used under stated conditions. Sub-characteristics: Time Behaviour, Resource Utilization, Capacity.",
            "value": 0.0
        },
        "Portability": {
            "weights": {
                "Functional Syntax": 0.0513,
                "Format": 0.0257,
                "Resource Handling": 0.1907,
                "Data Type Integrity": 0.0589,
                "Documentation": 0.1066,
                "Exception Handling": 0.1995,
                "Encryption": 0.0267,
                "Input Output Handling": 0.2658,
                "Structure": 0.0521,
                "Functional Semantics": 0.0227
            },
            "name": "Portability",
            "description": "Degree of effectiveness and efficiency with which a system, product or component can be transferred from one hardware, software or other operational or usage environment to another. Sub-characteristics: Adapability, Installability, Replaceability.",
            "value": 0.0
        },
        "Maintainability": {
            "weights": {
                "Functional Syntax": 0.173,
                "Format": 0.173,
                "Resource Handling": 0.0355,
                "Data Type Integrity": 0.0978,
                "Documentation": 0.173,
                "Exception Handling": 0.0832,
                "Encryption": 0.0115,
                "Input Output Handling": 0.0416,
                "Structure": 0.173,
                "Functional Semantics": 0.0384
            },
            "name": "Maintainability",
            "description": "This characteristic represents the degree of effectiveness and efficiency with which a product or system can be modified to improve it, correct it or adapt it to changes in environment, and in requirements. Sub-characteristics: Modularity, Reusability, Analysability, Modifiability, Testability.",
            "value": 0.0
        },
        "Reliability": {
            "weights": {
                "Functional Syntax": 0.0232,
                "Format": 0.0099,
                "Resource Handling": 0.1493,
                "Data Type Integrity": 0.1685,
                "Documentation": 0.0978,
                "Exception Handling": 0.1967,
                "Encryption": 0.0102,
                "Input Output Handling": 0.1493,
                "Structure": 0.1545,
                "Functional Semantics": 0.0408
            },
            "name": "Reliability",
            "description": "Degree to which a system, product or component performs specified functions under specified conditions for a specified period of time. Maturity, Availability, Fault Tolerance, Recoverability.",
            "value": 0.0
        },
        "Security": {
            "weights": {
                "Functional Syntax": 0.018,
                "Format": 0.0157,
                "Resource Handling": 0.1357,
                "Data Type Integrity": 0.1357,
                "Documentation": 0.018,
                "Exception Handling": 0.1373,
                "Encryption": 0.2412,
                "Input Output Handling": 0.2412,
                "Structure": 0.0153,
                "Functional Semantics": 0.0417
            },
            "name": "Security",
            "description": "Degree to which a product or system protects information and data so that persons or other products or systems have the degree of data access appropriate to their types and levels of authorization. Sub-characteristics: Confidentiality, Integrity, Non-repudiation, Authenticity, Accountability.",
            "value": 0.0
        },
        "Usability": {
            "weights": {
                "Functional Syntax": 0.0323,
                "Format": 0.0323,
                "Resource Handling": 0.0323,
                "Data Type Integrity": 0.0323,
                "Documentation": 0.111,
                "Exception Handling": 0.3315,
                "Encryption": 0.0323,
                "Input Output Handling": 0.3315,
                "Structure": 0.0323,
                "Functional Semantics": 0.0323
            },
            "name": "Usability",
            "description": "Degree to which a product or system can be used by specified users to achieve specified goals with effectiveness, efficiency and satisfaction in a specified context of use. Appropriateness, Learnability, Operability, User Error Protection, User Interface Aesthetics, Accessibility.",
            "value": 0.0
        }
    },
    "properties": {
        "Functional Syntax": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1048",
                        "description": "Use lambda expression instead of anonymous method",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1061",
                        "description": "Merge if statement with nested if statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1077",
                        "description": "Optimize LINQ method call",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1080",
                        "description": "Use 'Count/Length' property instead of 'Any' method",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1096",
                        "description": "Use bitwise operation instead of calling 'HasFlag'",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1113",
                        "description": "Use 'string.IsNullOrEmpty' method",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1146",
                        "description": "Use conditional access",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1165",
                        "description": "Unconstrained type parameter checked for null",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1197",
                        "description": "Optimize StringBuilder.Append/AppendLine call",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1198",
                        "description": "Avoid unnecessary boxing of value type",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1206",
                        "description": "Use conditional access instead of conditional expression",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1215",
                        "description": "Expression is always equal to true/false",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1219",
                        "description": "Call 'Enumerable.Skip' and 'Enumerable.Any' instead of 'Enumerable.Count'",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1233",
                        "description": "Use short-circuiting operator",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1235",
                        "description": "Optimize method call",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1236",
                        "description": "Use exception filter",
                        "value": 0.0
                    }
                ],
                "name": "Functional Syntax Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0,
                5.0E-4,
                0.002
            ],
            "name": "Functional Syntax",
            "description": "The operators, syntactic decision, object selection, etc., that determine how a functional act is defined. This is disjoint from the 'Format' property by having potential impact on more than just human-readability.",
            "value": 0.0
        },
        "Format": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1001",
                        "description": "Add braces (when expression spans over multiple lines)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1002",
                        "description": "Remove braces",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1003",
                        "description": "Add braces to if-else (when expression spans over multiple lines)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1004",
                        "description": "Remove braces from if-else",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1005",
                        "description": "Simplify nested using statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1006",
                        "description": "Merge else clause with nested if statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1007",
                        "description": "Add braces",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1016",
                        "description": "Use expression-bodied member",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1017",
                        "description": "Avoid multiline expression body",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1018",
                        "description": "Add accessibility modifiers",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1019",
                        "description": "Order modifiers",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1020",
                        "description": "Simplify Nullable<T> to T?",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1021",
                        "description": "Simplify lambda expression",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1024",
                        "description": "Format accessor list",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1025",
                        "description": "Add new line before enum member",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1026",
                        "description": "Add new line before statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1027",
                        "description": "Add new line before embedded statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1028",
                        "description": "Add new line after switch label",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1029",
                        "description": "Format binary operator on next line",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1030",
                        "description": "Add empty line after embedded statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1031",
                        "description": "Remove unnecessary braces",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1032",
                        "description": "Remove redundant parentheses",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1033",
                        "description": "Remove redundant boolean literal",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1034",
                        "description": "Remove redundant 'sealed' modifier",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1035",
                        "description": "Remove redundant comma in initializer",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1036",
                        "description": "Remove redundant empty line",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1037",
                        "description": "Remove trailing white-space",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1038",
                        "description": "Remove empty statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1039",
                        "description": "Remove argument list from attribute",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1040",
                        "description": "Remove empty else clause",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1041",
                        "description": "Remove empty initializer",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1042",
                        "description": "Remove enum default underlying type",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1043",
                        "description": "Remove 'partial' modifier from type with a single part",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1045",
                        "description": "Rename private field according to camel case with underscore",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1046",
                        "description": "Asynchronous method name should end with 'Async'",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1047",
                        "description": "Non-asynchronous method name should not end with 'Async'",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1049",
                        "description": "Simplify boolean comparison",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1050",
                        "description": "Add argument list to object creation expression",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1051",
                        "description": "Parenthesize condition in conditional expression",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1057",
                        "description": "Add empty line between declarations",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1058",
                        "description": "Use compound assignment",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1068",
                        "description": "Simplify logical negation",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1073",
                        "description": "Convert 'if' to 'return' statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1094",
                        "description": "Declare using directive on top level",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1103",
                        "description": "Convert 'if' to assignment",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1104",
                        "description": "Simplify conditional expression",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1104",
                        "description": "Simplify conditional expression",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1128",
                        "description": "Use coalesce expression",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1134",
                        "description": "Remove redundant statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1154",
                        "description": "Sort enum members",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1172",
                        "description": "Use 'is' operator instead of 'as' operator",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1215",
                        "description": "Expression is always equal to true/false",
                        "value": 0.0
                    }
                ],
                "name": "Format Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0061,
                0.0242,
                0.0621
            ],
            "name": "Format",
            "description": "Code formatting. This involves how the code is written as it appears to a human reader. Common synonyms include 'Style', 'Simplification', 'Readability', 'Convention', 'Verbosity', 'Naming'.",
            "value": 0.0
        },
        "Resource Handling": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1059",
                        "description": "Avoid locking on publicly accessible instance",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1090",
                        "description": "Call 'ConfigureAwait(false)'",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1159",
                        "description": "Use EventHandler<T>",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1210",
                        "description": "Return Task.FromResult instead of returning null",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1229",
                        "description": "Use async/await when necessary",
                        "value": 0.0
                    }
                ],
                "name": "Resource Handling Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0,
                0.0,
                1.0E-4
            ],
            "name": "Resource Handling",
            "description": "Management of resources: often related to locking of instances and file I/O.",
            "value": 0.0
        },
        "Data Type Integrity": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1008",
                        "description": "Use explicit type instead of 'var' (when the type is not obvious)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1009",
                        "description": "Use explicit type instead of 'var' (foreach variable)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1010",
                        "description": "Use 'var' instead of explicit type (when the type is obvious)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1012",
                        "description": "Use explicit type instead of 'var' (when the type is obvious)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1013",
                        "description": "Use predefined type",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1014",
                        "description": "Avoid implicitly-typed array",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1135",
                        "description": "Declare enum member with zero value (when enum has FlagsAttribute)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1177",
                        "description": "Use 'var' instead of explicit type (in foreach)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1204",
                        "description": "Use EventArgs.Empty",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1210",
                        "description": "Return Task.FromResult instead of returning null",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1231",
                        "description": "Make parameter ref read-only",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1234",
                        "description": "Duplicate enum value",
                        "value": 0.0
                    }
                ],
                "name": "Data Type Integrity Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0,
                0.0,
                0.0
            ],
            "name": "Data Type Integrity",
            "description": "A representation of how well each object adheres to C# object oriented typing expectations.",
            "value": 0.0
        },
        "Documentation": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1138",
                        "description": "Add summary to documentation comment",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1139",
                        "description": "Add summary element to documentation comment",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1140",
                        "description": "Add exception to documentation comment",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1141",
                        "description": "Add 'param' element to documentation comment",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1142",
                        "description": "Add 'typeparam' element to documentation comment",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1181",
                        "description": "Convert comment to documentation comment",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1232",
                        "description": "Order elements in documentation comment",
                        "value": 0.0
                    }
                ],
                "name": "Documentation Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0,
                1.0E-4,
                5.0E-4
            ],
            "name": "Documentation",
            "description": "Information about the source code intended to assist human understanding.",
            "value": 0.0
        },
        "Exception Handling": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1044",
                        "description": "Remove original exception from throw statement",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1075",
                        "description": "Avoid empty catch clause that catches System.Exception",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1194",
                        "description": "Implement exception constructors",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1202",
                        "description": "Avoid NullReferenceException",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1210",
                        "description": "Return Task.FromResult instead of returning null",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1236",
                        "description": "Use exception filter",
                        "value": 0.0
                    }
                ],
                "name": "Exception Handling Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0,
                0.0,
                3.0E-4
            ],
            "name": "Exception Handling",
            "description": "Goodness of approach in handling exceptions in a compliant and productive way.",
            "value": 0.0
        },
        "Encryption": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0005",
                        "description": "Weak Random Number Generator",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0006",
                        "description": "Weak hashing function",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0010",
                        "description": "Weak cipher algorithm",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0011",
                        "description": "Weak CBC Mode",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0012",
                        "description": "Weak ECB Mode",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0013",
                        "description": "Weak Cipher Mode",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0015",
                        "description": "Hardcoded Password",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0023",
                        "description": "View State Not Encrypted",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0024",
                        "description": "View State MAC Disabled",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0032",
                        "description": "Password RequiredLength Too Small",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0033",
                        "description": "Password Complexity",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0034",
                        "description": "Password RequiredLength Not Set",
                        "value": 0.0
                    }
                ],
                "name": "Encryption Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0,
                0.0,
                0.0
            ],
            "name": "Encryption",
            "description": "The concealment of code elements such that external entities are unable to decipher its information.",
            "value": 0.0
        },
        "Input Output Handling": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0001",
                        "description": "Command Injection",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0002",
                        "description": "SQL Injection (LINQ)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0003",
                        "description": "XPath Injection",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0004",
                        "description": "Certificate Validation Disabled",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0007",
                        "description": "XML eXternal Entity Injection (XXE)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0008",
                        "description": "Cookie Without SSL Flag",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0009",
                        "description": "Cookie Without HttpOnly Flag",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0011",
                        "description": "Weak CBC Mode",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0014",
                        "description": "SQL Injection (WebControls)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0016",
                        "description": "Cross-Site Request Forgery (CSRF)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0017",
                        "description": "Request Validation Disabled (Attribute)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0018",
                        "description": "Path Traversal",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0019",
                        "description": "OutputCache Conflict",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0020",
                        "description": "SQL Injection (OLE DB)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0021",
                        "description": "Request Validation Disabled (Configuration File)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0022",
                        "description": "Event Validation Disabled",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0025",
                        "description": "SQL Injection (ODBC)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0026",
                        "description": "SQL Injection (MsSQL Data Provider)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0027",
                        "description": "Open Redirect",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0028",
                        "description": "Insecure Deserialization",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0029",
                        "description": "Cross-Site Scripting (XSS)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0030",
                        "description": "Request validation is enabled only for pages (Configuration File)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0031",
                        "description": "LDAP Injection",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0035",
                        "description": "SQL Injection (Entity Framework)",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "SCS0036",
                        "description": "SQL Injection (EnterpriseLibrary.Data)",
                        "value": 0.0
                    }
                ],
                "name": "Input Output Handling Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0,
                0.0,
                0.0
            ],
            "name": "Input Output Handling",
            "description": "Management of the data going into and out of a source component.  Can relate to data sanitization, filtering, rejection, querying, database queries and storage, etc.",
            "value": 0.0
        },
        "Structure": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1060",
                        "description": "Declare each type in separate file",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1085",
                        "description": "Use auto-implemented property",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1102",
                        "description": "Make class static",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1110",
                        "description": "Declare type inside namespace",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1157",
                        "description": "Composite enum value contains undefined flag",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1158",
                        "description": "Static member in generic type should use a type parameter",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1160",
                        "description": "Abstract type should not have public constructors",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1161",
                        "description": "Enum should declare explicit values",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1168",
                        "description": "Parameter name differs from base name",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1169",
                        "description": "Make field read-only",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1170",
                        "description": "Use read-only auto-implemented property",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1187",
                        "description": "Use constant instead of field",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1193",
                        "description": "Overriding member cannot change 'params' modifier",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1194",
                        "description": "Implement exception constructors",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1203",
                        "description": "Use AttributeUsageAttribute",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1216",
                        "description": "Unnecessary unsafe context",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1224",
                        "description": "Make method an extension method",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1225",
                        "description": "Make class sealed",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1241",
                        "description": "Implement non-generic counterpart",
                        "value": 0.0
                    }
                ],
                "name": "Structure Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0,
                0.0019,
                0.0081
            ],
            "name": "Structure",
            "description": "The organization of classes, files, and methods. Includes object oriented concepts such as inheritance",
            "value": 0.0
        },
        "Functional Semantics": {
            "measure": {
                "diagnostics": [
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1155",
                        "description": "Use StringComparison when comparing strings",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1156",
                        "description": "Use string.Length instead of comparison with empty string",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1200",
                        "description": "Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy'",
                        "value": 0.0
                    },
                    {
                        "findings": [],
                        "toolName": "Roslynator",
                        "name": "RCS1227",
                        "description": "Validate arguments correctly",
                        "value": 0.0
                    }
                ],
                "name": "Functional Semantics Findings",
                "value": 0.0
            },
            "positive": false,
            "thresholds": [
                0.0,
                0.0,
                0.0
            ],
            "name": "Functional Semantics",
            "description": "The meaning and intended output of funtional acts.  For example, dividing all items in a list by two versus multiplying all items by two have different functional semantics.",
            "value": 0.0
        }
    }
}